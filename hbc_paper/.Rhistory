install.packages('rbookdown','tinytex')
install.packages("bookdown","tinytex")
install.packages('distill')
install.packages("distill")
install.packages('distill')
install.packages('rticles')
install.packages("rticles")
library(knitr)
library(rbookdown)
library(bookdown)
sessionInfo()
libarray(rmarkdown)
library(rmarkdown)
sessionInfo()
2020-11-05,
\newline
\newline
\newline
\newline
\newline
head(mtcars)
head(mtcars)[,seq(1,4)]
d <- read.csv("accuracy/accuracy_pctiles.csv")
d$region.type <- c("CF","CF ","tFM","tFM ","iFM","iFM ")
d$method <- c("peak_percentage", "pwvd","peak_percentage ", "pwvd","peak_percentage", "pwvd")
#
#knitr::kable(d, col.names = c("Call component", "Segmentation method", "Relative accuracy, 95 percentile range"),
#             caption="Summary statistics describing the performance of the two segmentation methods on the synthetised test data set. The pwvd method performs better than the peak_percentage method over the tested parameter space and for all call components (iFM,tFM and CF).")
paramtable <- autofit(flextable(d))
library(flextable)
autofit()
paramtable <- autofit(flextable(d))
paramtable <- set_header_labels(paramtable, Region.type='Call component', method='Segmentation method', X0='Segmentation accuracy: 95%ile range')
paramtable
d <- read.csv("accuracy/accuracy_pctiles.csv")
d$region.type <- c("CF","CF ","tFM","tFM ","iFM","iFM ")
d$method <- c("peak_percentage", "pwvd","peak_percentage ", "pwvd","peak_percentage", "pwvd")
#
#knitr::kable(d, col.names = c("Call component", "Segmentation method", "Relative accuracy, 95 percentile range"),
#             caption="Summary statistics describing the performance of the two segmentation methods on the synthetised test data set. The pwvd method performs better than the peak_percentage method over the tested parameter space and for all call components (iFM,tFM and CF).")
d <- d[,c(4,1,2,3)]
paramtable <- autofit(flextable(d))
paramtable <- set_header_labels(paramtable, region.type='Call component', method='Segmentation method', X0='Segmentation accuracy: 95%ile range')
paramtable
setwd("F:/horseshoebat_data/hbc_paper")
indcall <- read.csv('../combined_analysis/indcall_final.csv')
nindcalls <- as.data.frame(table(indcall$groupsize))
nmulti_indcall <- nindcalls[1,2]
nsingle_indcall <- nindcalls[2,2]
indcall
indcall$ifm_duration
min(ndcall$ifm_duration)
min(indcall$ifm_duration)
min(indcall$ifm_duration, na.rm=TRUE)
max(indcall$ifm_duration, na.rm=TRUE)
max(indcall$tfm_duration, na.rm=TRUE)
min(indcall$tfm_duration, na.rm=TRUE)
col(indcall)
columns(indcall)
colnames(indcall)
singleind <- subset(indcall, num_bats==1)
singleind
getminmax<-function(X){c(min(X,na.rm=TRUE), max(X,na.rm=TRUE))}
single.ifmdurn <- getminmax(singlind$ifm_duration)
singleind <- subset(indcall, num_bats==1)
multiind <- subset(indcall, num_bats>1)
getminmax<-function(X){c(min(X,na.rm=TRUE), max(X,na.rm=TRUE))}
# ifm durns
single.ifmdurn <- getminmax(singleind$ifm_duration)
multi.ifmdurn <- getminmax(multiind$ifm_duration)
single.ifmdurn
multi.ifmdurn
single.tfmdurn <- getminmax(singleind$tfm_duration)
multi.tfmdurn <- getminmax(multiind$tfm_duration)
single.tfmdurn
multi.tfmdurn
indcall <- read.csv('../combined_analysis/indcall_final.csv')
singleind <- subset(indcall, num_bats==1)
multiind <- subset(indcall, num_bats>1)
getminmax<-function(X){c(min(X,na.rm=TRUE), max(X,na.rm=TRUE))}
# ifm durns
single.ifmdurn <- getminmax(singleind$ifm_duration)
multi.ifmdurn <- getminmax(multiind$ifm_duration)
# tfm durns
single.tfmdurn <- getminmax(singleind$tfm_duration)
multi.tfmdurn <- getminmax(multiind$tfm_duration)
single.cfdurn <- getminmax(singleind$cf_duration)
multi.cfdurn <- getminmax(multiind$cf_duration)
colnames(singleind)
single.tfmtemfreq <- getminmax(singleind$tfm_terminal_frequency)
multi.tfmtemfreq <- getminmax(multiind$tfm_terminal_frequency)
|Parameter name                  | Single-bat range (min-max)                        | Multi-bat range (min-max)                       |
|--------------------------------|---------------------------------------------------|-------------------------------------------------|
|CF duration (ms)                | `r single.cfdurn[1]`-`r single.cfdurn[2]`         |  `r multi.cfdurn[1]`-`r multi.cfdurn[2]`      |
|tFM duration (ms)               | `r single.tfmdurn[1]`-`r single.tfmdurn[2]`       |  `r multi.tfmdurn[1]`-`r multi.tfmdurn[2]`    |
|iFM duration (ms)               | `r single.ifmdurn[1]`-`r single.ifmdurn[2]`       |  `r multi.ifmdurn[1]`-`r multi.ifmdurn[2]`    |
|CF peak frequency  (kHz)        | `r single.cfpfr[1]`-`r single.cfpfr[2]`           |  `r multi.cfpfr[1]`-`r multi.cfpfr[1]`      |
|tFM lower frequency  (kHz)      | `r single.tfmtemfreq[1]`-`r single.tfmtemfreq[2]` |  `r multi.tfmtemfreq[1]`-`r multi.tfmtemfreq[1]`|
|iFM lower frequency  (kHz)      | `r single.ifmtemfreq[1]`-`r single.ifmtemfreq[2]` |  `r multi.ifmtemfreq[1]`-`r multi.ifmtemfreq[1]`|
single.cflevel <- getminmax(singleind$cf_dbrms)
multi.cflevel <- getminmax(multiind$cf_dbrms)
# reclevel
# CF
single.cflevel <- getminmax(singleind$cf_dbrms);multi.cflevel <- getminmax(multiind$cf_dbrms)
# cf-ratios
single.tfmcf <- getminmax(singleind$tfm.cf_dbratio);multi.tfmcf <- getminmax(multiind$tfm.cf_dbratio)
indcall
indcall$tfm_duration
median(indcall$tfm_duration)
median(indcall$tfm_duration, na.rm=TRUE)
0.1/1.72
